% --------------------------------------------------------------------------
% the TRANSLATIONS package
% 
%   internationalization of LaTeX packages
%
% --------------------------------------------------------------------------
% Clemens Niederberger
% Web:    https://github.com/cgnieder/translations
% E-Mail: clemens@cnltx.de
% --------------------------------------------------------------------------
% Copyright 2012--2022 Clemens Niederberger
% 
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2008/05/04 or later.
% 
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Clemens Niederberger.
% --------------------------------------------------------------------------
% If you have any ideas, questions, suggestions or bugs to report, please
% feel free to contact me.
% --------------------------------------------------------------------------
% package setup:
\providecommand \DeclareRelease [3] {}
\providecommand \DeclareCurrentRelease [2] {}
\DeclareRelease {v1} {2022-02-05} {translations-v1.sty}
\DeclareCurrentRelease {v2} {2022-03-28}

\ExplSyntaxOn

\tl_const:Nn \c_trnslt_date_tl                 {2022/03/28}
\tl_const:Nn \c_trnslt_version_major_number_tl {2}
\tl_const:Nn \c_trnslt_version_minor_number_tl {0}
\tl_const:Nn \c_trnslt_version_subrelease_tl   {}
\tl_const:Nx \c_trnslt_version_number_tl
  {
    \c_trnslt_version_major_number_tl .
    \c_trnslt_version_minor_number_tl
  }
\tl_const:Nx \c_trnslt_version_tl
  {
    \c_trnslt_version_number_tl
    \c_trnslt_version_subrelease_tl
  }
\tl_const:Nn \c_trnslt_info_tl {internationalization~ of~ LaTeX~ packages}

\ProvidesExplPackage
  {translations}
  {\c_trnslt_date_tl}
  {\c_trnslt_version_tl}
  {\c_trnslt_info_tl}

% --------------------------------------------------------------------------
\prg_new_conditional:Npnn \trnslt_package_if_loaded:n #1 {p,T,F,TF}
  {
    \@ifpackageloaded {#1}
      { \prg_return_true: }
      { \prg_return_false: }
  }

% --------------------------------------------------------------------------
% check if babel or polyglossia is used
\hook_gset_rule:nnnn {begindocument} {trnslt} {after} {babel}
\hook_gset_rule:nnnn {begindocument} {trnslt} {after} {polyglossia}

\hook_gput_code:nnn {begindocument/before} {trnslt}
  {
    \bool_lazy_or:nnF
      { \trnslt_package_if_loaded_p:n {babel} }
      { \trnslt_package_if_loaded_p:n {polyglossia} }
      { \msg_note:nn {trnslt} {no-language-package} }
    % define \languagename if not defined yet:
    \cs_if_free:NT \languagename { \cs_new:Npn \languagename {english} }  
    \tl_const:Nn \c_trnslt_current_language_tl { \languagename }
  }

% ==========================================================================
% variants of kernel functions:
\cs_generate_variant:Nn \tl_const:Nn {cv,ce,Ne}
\cs_generate_variant:Nn \tl_set:Nn {Ne}
\cs_generate_variant:Nn \prop_gput:Nnn {Ne,Nne,ce}
\cs_generate_variant:Nn \use:nn {ne}
\cs_generate_variant:Nn \text_titlecase:n {V}
\cs_generate_variant:Nn \seq_put_right:Nn {Ne}
\cs_generate_variant:Nn \seq_gput_right:Nn {Ne}
\cs_generate_variant:Nn \hook_gput_code:nnn {e}
\cs_generate_variant:Nn \file_input:n {e}
\cs_generate_variant:Nn \seq_map_indexed_inline:Nn {c}
\cs_generate_variant:Nn \msg_warning:nnnn {nnne}
\cs_generate_variant:Nn \clist_map_inline:nn {e}
\cs_generate_variant:Nn \clist_put_right:Nn {Ne}

\prg_generate_conditional_variant:Nnn \prop_if_in:Nn {Ne} {p,T,F,TF}
\prg_generate_conditional_variant:Nnn \seq_if_in:Nn {Ne} {T,F,TF}
\prg_generate_conditional_variant:Nnn \file_if_exist:n {e} {T,F,TF}

% ==========================================================================
% messages
\prop_gput:Nnn \g_msg_module_name_prop {trnslt} {translations}

\msg_new:nnn {trnslt} {unknown-language}
  { Unknown~ language~ `#1'~ \msg_line_context: . }

\msg_new:nnn {trnslt} {language-defined}
  { Language~ `#1'~ already~ defined~ \msg_line_context: . }

\msg_new:nnn {trnslt} {dialect-defined}
  { Dialect~ `#1'~ of~ language~ `#2'~ already~ defined~ \msg_line_context: . }
  
\msg_new:nnn {trnslt} {translation-defined}
  { The~ #2~ translation~ for~ `#1'~ is~ already~ defined~ \msg_line_context: . }

\msg_new:nnn {trnslt} {translation-not-defined}
  {
    The~ \trnslt_language:n {#2} ~ translation~ for~ `#1'~ is~ not~ defined,~
    yet,~ \msg_line_context: .
  }

\msg_new:nnn {trnslt} {translation-not-given}
  { The~ #2~ translation~ for~ `#1'~ has~ not~ been~ given~ \msg_line_context: . }

\msg_new:nnn {trnslt} {no-language-package}
  {
    No~ language~ package~ found.~ I~ am~ going~ to~ use~ `english'~ as~
    default~ language.
  }

\msg_new:nnn {trnslt} {no-dictionary-found}
  {
    I~ can't~ find~ the~ dictionary~ `#1-#2.trsl'~ \msg_line_context: . ~
    If~ this~ is~ no~ typo~ then~ make~ sure~ the~ file~ is~ placed~
    somewhere~ where~ TeX~ can~ find~ it.
  }

\msg_new:nnn {trnslt} {loading-dictionary}
  { Loading~ the~ dictionary~ `#1'~ for~ `#2'~ ... }

\msg_new:nnn {trnslt} {not-a-dictionary}
  { The~ file~ `#1-#2.trsl'~ does~ not~ appear~ to~ be~ a~ dictionary~ file. }

\msg_new:nnn {trnslt} {deprecated-function}
  { The~ command~ #1~ is~ deprecated.~ Use~ #2~ instead. }

\msg_new:nnn {trnslt} {removed-function}
  { The~ command~ #1~ has~ been~ removed. }
  
% ==========================================================================
% book keeping: the following sequences keep record of defined languages,
% dialects and aliases
\seq_new:N  \g_trnslt_languages_seq % all base languages
\prop_new:N \g_trnslt_aliases_prop  % all aliases and their base
\seq_new:N  \g_trnslt_aliases_seq   % all aliases
\prop_new:N \g_trnslt_dialects_prop % all dialects and their base
\seq_new:N  \g_trnslt_dialects_seq  % all dialects

% --------------------------------------------------------------------------
% #1: language
\cs_new_protected:Npn \trnslt_language_declare:n #1
  {
    \trnslt_language_if_exist:nF {#1}
      {
        \tl_const:cn {c_trnslt_language_#1_tl} {#1}
        \seq_if_in:NeF \g_trnslt_languages_seq { \trnslt_language_base:n {#1} }
          {
            \seq_gput_right:Ne \g_trnslt_languages_seq
              { \trnslt_language_base:n {#1} }
          }
        \prop_gput:Nne \g_trnslt_aliases_prop {#1}
          { \__trnslt_language:n {#1} }
      }
  }

\cs_new_protected:Npn \trnslt_language_new:n #1
  {
    \trnslt_language_if_exist:nT {#1}
      { \msg_error:nnn {trnslt} {language-defined} {#1} }
    \trnslt_language_declare:n {#1}
  }

% get the name declared by \trnslt_language_declare:n
% the underlying name of a given language;
% this is not the base of a dialect!
\cs_new:Npn \trnslt_language:n #1
  { \tl_use:c {c_trnslt_language_ \__trnslt_language:n {#1} _tl} }
\cs_generate_variant:Nn \trnslt_language:n {e}

\cs_new:Npn \__trnslt_language:n #1
  {
    \prop_if_in:NnTF \g_trnslt_aliases_prop {#1}
      { \__trnslt_prop_item:Nn \g_trnslt_aliases_prop {#1} }
      {#1}
  }

\prg_new_conditional:Npnn \trnslt_language_if_exist:n #1 {p,T,F,TF}
  {
    \tl_if_exist:cTF {c_trnslt_language_#1_tl}
      { \prg_return_true: }
      { \prg_return_false: }
  }
  
% --------------------------------------------------------------------------
% #1: dialect
% #2: language
\cs_new_protected:Npn \trnslt_dialect_declare:nn #1#2
  {
    \trnslt_language_if_exist:nF {#2}
      {
        \msg_warning:nnn {trnslt} {unknown-language} {#2}
        \trnslt_language_declare:n {#2}
      }
    \trnslt_dialect_if_exist:nTF {#1}
      { \msg_error:nnnn {trnslt} {dialect-defined} {#1} {#2} }
      {
        \trnslt_language_declare:n {#1}
        \seq_gput_right:Nn \g_trnslt_dialects_seq {#1}
        \tl_const:ce {c_trnslt_dialect_#1_tl} { { \trnslt_language:n {#2} } {#1} }
        \prop_gput:Nne \g_trnslt_dialects_prop {#1} { \trnslt_language:n {#2} }
        \seq_if_exist:cF {g_trnslt_#2_dialects_seq}
          { \seq_new:c {g_trnslt_#2_dialects_seq} }
        \seq_gput_right:cn {g_trnslt_#2_dialects_seq} {#1}
      }
  }
  
% dialect equivalent of \trnslt_language:n
\cs_new:Npn \trnslt_dialect:n #1
  { \tl_use:c {c_trnslt_dialect_ \__trnslt_language:n {#1} _tl} }

% this macros fetches the base language for a given dialect, expandably:
\cs_new:Npn \trnslt_dialect_base:n #1
  {
    \trnslt_dialect_if_exist:nTF {#1}
      {
        \use:ne
          { \use_i:nn }
          { \trnslt_dialect:n {#1} }
      }
      {#1}
  }

% get the underlying name of a language or the name of the base language of a
% dialect:
\cs_new:Npn \trnslt_language_base:n #1
  {
    \trnslt_dialect_if_exist:nTF {#1}
      { \trnslt_language:e { \trnslt_dialect_base:n {#1} } }
      { \trnslt_language:n {#1} }
  }
\cs_generate_variant:Nn \trnslt_language_base:n {e}

\prg_new_conditional:Npnn \trnslt_dialect_if_exist:n #1 {p,T,F,TF}
  {
    \tl_if_exist:cTF {c_trnslt_dialect_ \__trnslt_language:n {#1} _tl}
      { \prg_return_true: }
      { \prg_return_false: }
  }

% --------------------------------------------------------------------------
% #1: alias
% #2: language
\cs_new_protected:Npn \trnslt_alias_declare:nn #1#2
  {
    \trnslt_language_if_exist:nF {#2}
      {
        \msg_warning:nnn {trnslt} {unknown-language} {#2}
        \trnslt_language_declare:n {#2}
      }
    \prop_gput:Nne \g_trnslt_aliases_prop {#1}
      { \__trnslt_language:n {#2} }
    \seq_gput_right:Nn \g_trnslt_aliases_seq {#1}
    \trnslt_language_declare:n {#1}
  }

\prg_new_conditional:Npnn \trnslt_alias_if_exist:n #1 {p,T,F,TF}
  {
    \seq_if_in:NnTF \g_trnslt_aliases_seq {#1}
      { \prg_return_true: }
      { \prg_return_false: }
  }

% --------------------------------------------------------------------------
% check the current language:
% #1: language
% #2: true
% #3: false
\prg_new_conditional:Npnn \trnslt_if_language:n #1 {p,T,F,TF}
  {
    \str_if_eq:eeTF
      { \trnslt_language:n {#1} }
      { \trnslt_language:e { \languagename } }
      { \prg_return_true: }
      { \prg_return_false: }
  }

\prg_new_conditional:Npnn \trnslt_if_language_base:n #1 {p,T,F,TF}
  {
    \str_if_eq:eeTF
      { \trnslt_language_base:n {#1} }
      { \trnslt_language_base:e { \languagename } }
      { \prg_return_true: }
      { \prg_return_false: }
  }
  
% --------------------------------------------------------------------------
% Now that we can define languages we also want to be able to define
% translations:
\prop_new:N \g_trnslt_translations_prop

% #1: type
% #2: word
% #3: language
% #4: replacement
\cs_new_protected:Npn \__trnslt_translation_declare:nnnn #1#2#3#4
  {
    \trnslt_language_if_exist:nTF {#3}
      {
        \str_case:nnF {#1}
          {
            {declare}
              { \cs_set_protected:Nn \__trnslt_translation_do:nn {##2} }
            {new}
              {
                \cs_set_protected:Nn \__trnslt_translation_do:nn
                  {
                    \bool_if:nTF {##1}
                      { \msg_error:nnnn {trnslt} {translation-defined} {#2} {#3} }
                      {##2}
                  }
              }
            {renew}
              {
                \cs_set_protected:Nn \__trnslt_translation_do:nn
                  {
                    \bool_if:nTF {##1}
                      {##2}
                      { \msg_error:nnnn {trnslt} {translation-not-defined} {#2} {#3} }
                  }
              }
            {provide}
              { \cs_set_protected:Nn \__trnslt_translation_do:nn { \bool_if:nF {##1} {##2} } }
          }
          { \cs_set:Nn \__trnslt_translation_do:nn {} }
        \__trnslt_translation_do:nn
          { \trnslt_translation_if_exist_p:nn {#2} {#3} }
          { \prop_gput:Nen \g_trnslt_translations_prop {#2| \trnslt_language:n {#3} } {#4} }
      }
      { \msg_error:nnn {trnslt} {unknown-language} {#3} }
  }

\cs_new:Nn \__trnslt_translation_do:nn {}

% #1: word
% #2: language
\prg_new_conditional:Npnn \trnslt_translation_if_exist:nn #1#2 {p,T,F,TF}
  {
    \prop_if_in:NeTF \g_trnslt_translations_prop {#1| \trnslt_language:n {#2} }
      { \prg_return_true: }
      { \prg_return_false: }
  }
\prg_generate_conditional_variant:Nnn \trnslt_translation_if_exist:nn {ne,nV} {p,T,F,TF}

% #1: word
% #2: language
% #3: replacement
\cs_new_protected:Npn \trnslt_translation_declare:nnn #1#2#3
  { \__trnslt_translation_declare:nnnn {declare} {#1} {#2} {#3} }
\cs_generate_variant:Nn \trnslt_translation_declare:nnn {nV}

% #1: word
% #2: <language> = <replacement>, ...
\cs_new_protected:Npn \trnslt_translations_declare:nn #1#2
  {
    \keyval_parse:nnn
      { \msg_error:nnnn {trnslt} {translation-not-given} {#1} }
      { \trnslt_translation_declare:nnn {#1} }
      {#2}
  }

\cs_new:Npn \__trnslt_shuffle:nnn #1#2#3 { #1 #3 #2 }
  
% #1: language
% #2: <word> = <replacement>, ...
\cs_new_protected:Npn \trnslt_language_translations_declare:nn #1#2
  {
    \keyval_parse:nnn
      { \__trnslt_shuffle:nnn { \msg_error:nnnn {trnslt} {translation-not-given} } {#1} }
      { \__trnslt_shuffle:nnn { \trnslt_translation_declare:nnn } {#1} }
      {#2}
  }
  
% #1: word
% #2: language
% #3: replacement
\cs_new_protected:Npn \trnslt_translation_new:nnn #1#2#3
  { \__trnslt_translation_declare:nnnn {new} {#1} {#2} {#3} }
\cs_generate_variant:Nn \trnslt_translation_new:nnn {nV}
  
% #1: word
% #2: language
% #3: replacement
\cs_new_protected:Npn \trnslt_translation_renew:nnn #1#2#3
  { \__trnslt_translation_declare:nnnn {renew} {#1} {#2} {#3} }
\cs_generate_variant:Nn \trnslt_translation_renew:nnn {nV}
  
% #1: word
% #2: language
% #3: replacement
\cs_new_protected:Npn \trnslt_translation_provide:nnn #1#2#3
  { \__trnslt_translation_declare:nnnn {provide} {#1} {#2} {#3} }
\cs_generate_variant:Nn \trnslt_translation_provide:nnn {nV}
  
% --------------------------------------------------------------------------
% #1: word
% #2: language
\cs_new:Npn \trnslt_translate:nn #1#2
  {
    \trnslt_translation_if_exist:neTF {#1} { \trnslt_language:n {#2} }
      { \__trnslt_prop_item:Ne \g_trnslt_translations_prop {#1| \trnslt_language:n {#2} } }
      {
        \trnslt_translation_if_exist:neTF {#1} { \trnslt_language_base:n {#2} }
          { \__trnslt_prop_item:Ne \g_trnslt_translations_prop {#1| \trnslt_language_base:n {#2} } }
          {
            % we could check if any dialect has a translation, but...
            \trnslt_translation_if_exist:nnTF {#1} {fallback}
              { \__trnslt_prop_item:Nn \g_trnslt_translations_prop {#1|fallback} }
              {#1}
          }
      }
  }
\cs_generate_variant:Nn \trnslt_translate:nn {ne}

% retrieve property item without \unexpanded:
\cs_new:Npn \__trnslt_prop_item:Nn #1#2
  { \prop_map_tokens:Nn #1 { \__trnslt_prop_item:enn { \tl_to_str:n {#2} } } }
\cs_generate_variant:Nn \__trnslt_prop_item:Nn {Ne}

\cs_new:Npn \__trnslt_prop_item:nnn #1#2#3
  { \str_if_eq:nnT {#1} {#2} { \prop_map_break:n {#3} } }
\cs_generate_variant:Nn \__trnslt_prop_item:nnn {e}

% #1: tl variable
% #2: word
% #3: language
\cs_new_protected:Npn \trnslt_translation_get:Nnn #1#2#3
  { \tl_set:Nx #1 { \trnslt_translate:nn {#2} {#3} } }
\cs_generate_variant:Nn \trnslt_translation_get:Nnn {Nne}

% --------------------------------------------------------------------------
% The basics are set. What's missing? Right: dictionaries! Those will be files
% that contain translations for a specific language.
% --------------------------------------------------------------------------
\tl_new:N \l_trnslt_dictionary_name_tl
\tl_new:N \l_trnslt_dictionary_language_tl

% #1: word
% #2: replacement
\cs_new_protected:Npn \__trnslt_dictionary_translation_add:nn #1#2
  {
    \prop_gput:cnn
      {
        g__trnslt_dictionary_
        \l_trnslt_dictionary_name_tl _
        \l_trnslt_dictionary_language_tl _prop
      }
      {#1}
      {#2}
    \seq_gput_right:cn
      {
        g__trnslt_dictionary_
        \l_trnslt_dictionary_name_tl _
        \l_trnslt_dictionary_language_tl _seq
      }
      {#1}
  }
  
% #1: language
% #2: name
\cs_new_protected:Npn \__trnslt_dictionary_provide:nn #1#2
  {
    \tl_set:Nn \l_trnslt_dictionary_name_tl {#2}
    \tl_set:Ne \l_trnslt_dictionary_language_tl { \trnslt_language:n {#1} }
    \prop_new:c
      {
        g__trnslt_dictionary_
        \l_trnslt_dictionary_name_tl _
        \l_trnslt_dictionary_language_tl _prop
      }
    \seq_new:c
      {
        g__trnslt_dictionary_
        \l_trnslt_dictionary_name_tl _
        \l_trnslt_dictionary_language_tl _seq
      }
  }

\NewDocumentCommand \ProvideDictionaryFor {mmo}
  {
    \__trnslt_dictionary_provide:nn {#1} {#2}
    \ProvidesFile
      {#2 - \l_trnslt_dictionary_language_tl .trsl}
      [
        (
          \l_trnslt_dictionary_language_tl \c_space_tl
          translation~ file~ `#2'
          \IfNoValueF {#3} {~#3}
        )
      ]
  }

% #1: name
\cs_new_protected:Npn \trnslt_load_dictionary:n #1
  {
    \hook_gput_code:nnn {begindocument/before} {trnslt}
      { \__trnslt_load_dictionary:nn {#1} { \c_trnslt_current_language_tl } }
  }

% #1: name
% #2: language
\cs_new_protected:Npn \trnslt_load_dictionary:nn #1#2
  {
    \hook_gput_code:nnn {begindocument/before} {trnslt}
      { \__trnslt_load_dictionary:nn {#1} {#2} }
  }

\seq_new:N \l__trnslt_dictionaries_seq

\cs_new_protected:Npn \__trnslt_load_dictionary:nn #1#2
  {
    \seq_if_in:NeF \l__trnslt_dictionaries_seq { #1 & \trnslt_language:n {#2} }
      {
        \seq_put_right:Ne \l__trnslt_dictionaries_seq
          { #1 & \trnslt_language:n {#2} }
      }
  }

% #1: name
% #2: language
\cs_new_protected:Npn \__trnslt_input_dictionary:w #1&#2 \q_stop
  {
    \__trnslt_dictionary_if_loaded:nnF {#1} {#2}
      {
        \file_if_exist:nTF {#1-#2.trsl}
          {
            \__trnslt_check_dictionary:nn {#1} {#2}
            \input {#1-#2.trsl}
          }
          {
            \trnslt_dialect_if_exist:nTF {#2}
              {
                \__trnslt_dictionary_if_loaded:nnF {#1} { \trnslt_language_base:n {#2} }
                  {
                    \file_if_exist:eTF {#1- \trnslt_language_base:n {#2}  .trsl}
                    {
                      \__trnslt_check_dictionary:ne {#1} { \trnslt_language_base:n {#2} }
                      \input {#1- \trnslt_language_base:n {#2} .trsl}
                    }
                    { \msg_warning:nnnn {trnslt} {no-dictionary-found} {#1} {#2} }
                  }
              }
              { \msg_warning:nnnn {trnslt} {no-dictionary-found} {#1} {#2} }
          }
      }
  }

% #1: name
% #2: language
\cs_new_protected:Npn \__trnslt_check_dictionary:nn #1#2
  {
    \hook_gput_code:nnn {file/#1-#2.trsl/after} {trnslt}
      {
        \__trnslt_dictionary_if_loaded:nnTF {#1} {#2}
          { \msg_note:nnnn {trnslt} {loading-dictionary} {#1} {#2} }
          { \msg_note:nnnn {trnslt} {not-a-dictionary} {#1} {#2} }
      }
  }
\cs_generate_variant:Nn \__trnslt_check_dictionary:nn {ne}

% #1: name
% #2: language
\prg_new_conditional:Npnn \__trnslt_dictionary_if_loaded:nn #1#2 {p,T,F,TF}
  {
    \prop_if_exist:cTF {g__trnslt_dictionary_ #1 _ #2 _prop}
      { \prg_return_true: }
      { \prg_return_false: }
  }

% #1: word
% #2: replacement
\cs_new_protected:Npn \trnslt_dictionary_translation_declare:nn #1#2
  {
    \__trnslt_dictionary_translation_add:nn {#1} {#2}
    \trnslt_translation_declare:nVn {#1} \l_trnslt_dictionary_language_tl
  }

\cs_new_protected:Npn \trnslt_dictionary_translation_new:nn #1#2
  {
    \trnslt_translation_if_exist:nVF {#1} \l_trnslt_dictionary_language_tl
      { \__trnslt_dictionary_translation_add:nn {#1} {#2} }
    \trnslt_translation_new:nVn {#1} \l_trnslt_dictionary_language_tl {#2}
  }

\cs_new_protected:Npn \trnslt_dictionary_translation_renew:nn #1#2
  {
    \trnslt_translation_if_exist:nVT {#1} \l_trnslt_dictionary_language_tl
      { \__trnslt_dictionary_translation_add:nn {#1} {#2} }
    \trnslt_translation_renew:nVn {#1} \l_trnslt_dictionary_language_tl {#2}
  }

\cs_new_protected:Npn \trnslt_dictionary_translation_provide:nn #1#2
  {
    \trnslt_translation_if_exist:nVF {#1} \l_trnslt_dictionary_language_tl
      { \__trnslt_dictionary_translation_add:nn {#1} {#2} }
    \trnslt_translation_provide:nVn {#1} \l_trnslt_dictionary_language_tl {#2}
  }

% ==========================================================================
% Now that the package is finished let's use the above commands to provide a
% basis for usage; we need all languages known to `babel' and `polyglossia'
% as well as aliases to allow different spellings/names; we also need dialects
% where it makes sense (e.g. British as a dialect of English)

% --------------------------------------------------------------------------
% dummy language `fallback'
\trnslt_language_declare:n {fallback}
\trnslt_alias_declare:nn {Fallback} {fallback}

% --------------------------------------------------------------------------
% predefined languages
\trnslt_language_declare:n {afrikaans}
\trnslt_language_declare:n {albanian}
\trnslt_language_declare:n {amharic}
\trnslt_language_declare:n {arabic}
\trnslt_language_declare:n {armenian}
\trnslt_language_declare:n {asturian}
\trnslt_language_declare:n {azerbaijani}
\trnslt_language_declare:n {basque}
\trnslt_language_declare:n {bengali}
\trnslt_language_declare:n {breton}
\trnslt_language_declare:n {bulgarian}
\trnslt_language_declare:n {catalan}
\trnslt_language_declare:n {coptic}
\trnslt_language_declare:n {czech}
\trnslt_language_declare:n {danish}
\trnslt_language_declare:n {dutch}
\trnslt_language_declare:n {english}
\trnslt_language_declare:n {esperanto}
\trnslt_language_declare:n {estonian}
\trnslt_language_declare:n {ethiop}
\trnslt_language_declare:n {farsi}
\trnslt_language_declare:n {finnish}
\trnslt_language_declare:n {french}
\trnslt_language_declare:n {friulan}
\trnslt_language_declare:n {gaelic}
\trnslt_language_declare:n {galician}
\trnslt_language_declare:n {german}
\trnslt_language_declare:n {greek}
\trnslt_language_declare:n {hebrew}
\trnslt_language_declare:n {hindustani}
\trnslt_language_declare:n {hungarian}
\trnslt_language_declare:n {icelandic}
\trnslt_language_declare:n {interlingua}
\trnslt_language_declare:n {italian}
\trnslt_language_declare:n {japanese}
\trnslt_language_declare:n {kannada}
\trnslt_language_declare:n {korean}
\trnslt_language_declare:n {ladin}
\trnslt_language_declare:n {lao}
\trnslt_language_declare:n {latin}
\trnslt_language_declare:n {latvian}
\trnslt_language_declare:n {lithuanian}
\trnslt_language_declare:n {macedonian}
\trnslt_language_declare:n {malay}
\trnslt_language_declare:n {malayalam}
\trnslt_language_declare:n {maldivian}
\trnslt_language_declare:n {marathi}
\trnslt_language_declare:n {mongolian}
% polyglossia seems to support this one but it is unclear which language is
% actually meant by it:
% \trnslt_language_declare:n {nko}
\trnslt_language_declare:n {norwegian}
\trnslt_language_declare:n {occitan}
\trnslt_language_declare:n {piedmontese}
\trnslt_language_declare:n {pinyin}
\trnslt_language_declare:n {polish}
\trnslt_language_declare:n {portuges}
\trnslt_language_declare:n {romanian}
\trnslt_language_declare:n {romansh}
\trnslt_language_declare:n {russian}
\trnslt_language_declare:n {samin}
\trnslt_language_declare:n {sanskrit}
\trnslt_language_declare:n {serbocroatian}
\trnslt_language_declare:n {slovak}
\trnslt_language_declare:n {slovenian}
\trnslt_language_declare:n {sorbian}
% not sure about this: isn't it either a Spanish or English dialect?
\trnslt_language_declare:n {spanglish}
\trnslt_language_declare:n {spanish}
\trnslt_language_declare:n {swedish}
% polyglossia seems to support this one but it is unclear which language is
% actually meant by it:
% \trnslt_language_declare:n {syriac}
\trnslt_language_declare:n {tamil}
\trnslt_language_declare:n {telugu}
\trnslt_language_declare:n {thai}
\trnslt_language_declare:n {tibetan}
\trnslt_language_declare:n {turkish}
\trnslt_language_declare:n {turkmen}
\trnslt_language_declare:n {ukrainian}
\trnslt_language_declare:n {vietnamese}
\trnslt_language_declare:n {welsh}

\trnslt_dialect_declare:nn {british} {english}
\trnslt_dialect_declare:nn {australian} {english}
\trnslt_dialect_declare:nn {american} {english}
\trnslt_dialect_declare:nn {acadian} {french}
\trnslt_dialect_declare:nn {canadien} {french}
\trnslt_dialect_declare:nn {canadian} {english}
\trnslt_dialect_declare:nn {newzealand} {english}
\trnslt_dialect_declare:nn {nynorsk} {norwegian}
\trnslt_dialect_declare:nn {irish} {gaelic}
\trnslt_dialect_declare:nn {scottish} {gaelic}
\trnslt_dialect_declare:nn {austrian} {german}
\trnslt_dialect_declare:nn {hindi} {hindustani}
\trnslt_dialect_declare:nn {urdu} {hindustani}
\trnslt_dialect_declare:nn {indonesian} {malay}
\trnslt_dialect_declare:nn {brazil} {portuges}
\trnslt_dialect_declare:nn {serbian} {serbocroatian}
\trnslt_dialect_declare:nn {croatian} {serbocroatian}
\trnslt_dialect_declare:nn {lowersorbian} {sorbian}
\trnslt_dialect_declare:nn {uppersorbian} {sorbian}
\trnslt_dialect_declare:nn {swissgerman} {german}
\trnslt_dialect_declare:nn {swissfrench} {french}
\trnslt_dialect_declare:nn {swissitalian} {italian}
\trnslt_dialect_declare:nn {swissromansh} {romansh}

% --------------------------------------------------------------------------
% aliases and dialects:
\trnslt_alias_declare:nn {Afrikaans} {afrikaans}
\trnslt_alias_declare:nn {Albanian} {albanian}
\trnslt_alias_declare:nn {Amharic} {amharic}
\trnslt_alias_declare:nn {Arabic} {arabic}
\trnslt_alias_declare:nn {Armenian} {armenian}
\trnslt_alias_declare:nn {Asturian} {asturian}
\trnslt_alias_declare:nn {astur-leonese} {asturian}
\trnslt_alias_declare:nn {Astur-Leonese} {astur-leonese}
\trnslt_alias_declare:nn {asturian-leonese} {asturian}
\trnslt_alias_declare:nn {Asturian-Leonese} {asturian-leonese}
\trnslt_alias_declare:nn {Azerbaijani} {azerbaijani}
\trnslt_alias_declare:nn {Basque} {basque}
\trnslt_alias_declare:nn {Bengali} {bengali}
\trnslt_alias_declare:nn {Breton} {breton}
\trnslt_alias_declare:nn {Bulgarian} {bulgarian}
\trnslt_alias_declare:nn {Catalan} {catalan}
\trnslt_alias_declare:nn {Coptic} {coptic}
\trnslt_alias_declare:nn {coptic egyptian} {coptic}
\trnslt_alias_declare:nn {Coptic Egyptian} {coptic egyptian}
\trnslt_alias_declare:nn {Czech} {czech}
\trnslt_alias_declare:nn {Danish} {danish}
\trnslt_alias_declare:nn {Dutch} {dutch}
\trnslt_alias_declare:nn {Farsi} {farsi}
\trnslt_alias_declare:nn {Finnish} {finnish}
\trnslt_alias_declare:nn {francais} {french}
\trnslt_alias_declare:nn {Francais} {francais}
\trnslt_alias_declare:nn {Canadien} {canadien}
\trnslt_alias_declare:nn {French} {french}
\trnslt_alias_declare:nn {Acadian} {acadian}
\trnslt_alias_declare:nn {frenchle} {french}
\trnslt_alias_declare:nn {American} {american}
\trnslt_alias_declare:nn {Australian} {australian}
\trnslt_alias_declare:nn {British} {british}
\trnslt_alias_declare:nn {Canadian} {canadian}
\trnslt_alias_declare:nn {English} {english}
\trnslt_alias_declare:nn {UKenglish} {british}
\trnslt_alias_declare:nn {USenglish} {american}
\trnslt_alias_declare:nn {Newzealand} {newzealand}
\trnslt_alias_declare:nn {Ethiop} {ethiop}
\trnslt_alias_declare:nn {Esperanto} {esperanto}
\trnslt_alias_declare:nn {Estonian} {estonian}
\trnslt_alias_declare:nn {Friulan} {friulan}
\trnslt_alias_declare:nn {Gaelic} {gaelic}
\trnslt_alias_declare:nn {Irish} {irish}
\trnslt_alias_declare:nn {irish gaelic} {irish}
\trnslt_alias_declare:nn {Irish Gaelic} {irish}
\trnslt_alias_declare:nn {Scottish} {scottish}
\trnslt_alias_declare:nn {scottish gaelic} {scottish}
\trnslt_alias_declare:nn {Scottish Gaelic} {scottish}
\trnslt_alias_declare:nn {Galician} {galician}
\trnslt_alias_declare:nn {German} {german}
\trnslt_alias_declare:nn {germanb} {german}
\trnslt_alias_declare:nn {ngerman} {german}
\trnslt_alias_declare:nn {Austrian} {austrian}
\trnslt_alias_declare:nn {naustrian} {austrian}
\trnslt_alias_declare:nn {Greek} {greek}
\trnslt_alias_declare:nn {polutonikogreek} {greek}
\trnslt_alias_declare:nn {ibygreek} {greek}
\trnslt_alias_declare:nn {bgreek} {greek}
\trnslt_alias_declare:nn {Hebrew} {hebrew}
\trnslt_alias_declare:nn {Hindustani} {hindustani}
\trnslt_alias_declare:nn {hindi-urdu} {hindustani}
\trnslt_alias_declare:nn {Hindi-Urdu} {hindi-urdu}
\trnslt_alias_declare:nn {Hindi} {hindi}
\trnslt_alias_declare:nn {Urdu} {urdu}
\trnslt_alias_declare:nn {Hungarian} {hungarian}
\trnslt_alias_declare:nn {magyar} {hungarian}
\trnslt_alias_declare:nn {Magyar} {magyar}
\trnslt_alias_declare:nn {Icelandic} {icelandic}
\trnslt_alias_declare:nn {Interlingua} {interlingua}
\trnslt_alias_declare:nn {Italian} {italian}
\trnslt_alias_declare:nn {Japanese} {japanese}
\trnslt_alias_declare:nn {Kannada} {kannada}
\trnslt_alias_declare:nn {Korean} {korean}
\trnslt_alias_declare:nn {Ladin} {ladin}
\trnslt_alias_declare:nn {Lao} {lao}
\trnslt_alias_declare:nn {laotian} {lao}
\trnslt_alias_declare:nn {Laotian} {laotian}
\trnslt_alias_declare:nn {Latin} {latin}
\trnslt_alias_declare:nn {Latvian} {latvian}
\trnslt_alias_declare:nn {lettish} {latvian}
\trnslt_alias_declare:nn {Lettish} {lettish}
\trnslt_alias_declare:nn {Lithuanian} {lithuanian}
\trnslt_alias_declare:nn {Macedonian} {macedonian}
% hopefully someone who knows better than me can comment on the following
% family:
\trnslt_alias_declare:nn {Malay} {malay}
\trnslt_alias_declare:nn {bahasa malaysia} {malay}
\trnslt_alias_declare:nn {Bahasa Malaysia} {bahasa malaysia}
\trnslt_alias_declare:nn {bahasa melayu} {bahasa malaysia}
\trnslt_alias_declare:nn {Bahasa Melayu} {bahasa melayu}
\trnslt_alias_declare:nn {bahasa} {bahasa melayu}
\trnslt_alias_declare:nn {Bahasa} {bahasa}
\trnslt_alias_declare:nn {bahasai} {bahasa}
\trnslt_alias_declare:nn {Bahasai} {bahasai}
\trnslt_alias_declare:nn {bahasam} {bahasa}
\trnslt_alias_declare:nn {Bahasam} {bahasam}
\trnslt_alias_declare:nn {Indonesian} {indonesian}
\trnslt_alias_declare:nn {indon} {indonesian}
% 
\trnslt_alias_declare:nn {Malayalam} {malayalam}
\trnslt_alias_declare:nn {Maldivian} {maldivian}
\trnslt_alias_declare:nn {divehi} {maldivian}
\trnslt_alias_declare:nn {Divehi} {divehi}
\trnslt_alias_declare:nn {Marathi} {marathi}
\trnslt_alias_declare:nn {Mongolian} {mongolian}
% \trnslt_alias_declare:nn {Nko} {nko}
\trnslt_alias_declare:nn {norsk} {norwegian}
\trnslt_alias_declare:nn {Norsk} {norsk}
\trnslt_alias_declare:nn {Norwegian} {norwegian}
\trnslt_alias_declare:nn {Nynorsk} {nynorsk}
\trnslt_alias_declare:nn {Occitan} {occitan}
\trnslt_alias_declare:nn {lenga d'oc} {occitan}
\trnslt_alias_declare:nn {langue d'oc} {occitan}
\trnslt_alias_declare:nn {Piedmontese} {piedmontese}
\trnslt_alias_declare:nn {piemontese} {piedmontese}
\trnslt_alias_declare:nn {Piemontese} {piemontese}
\trnslt_alias_declare:nn {piemonteis} {piedmontese}
\trnslt_alias_declare:nn {Piemonteis} {piemonteis}
\trnslt_alias_declare:nn {Pinyin} {pinyin}
\trnslt_alias_declare:nn {Polish} {polish}
\trnslt_alias_declare:nn {Brazil} {brazil}
\trnslt_alias_declare:nn {brazilian} {brazil}
\trnslt_alias_declare:nn {Brazilian} {brazilian}
\trnslt_alias_declare:nn {Portuges} {portuges}
\trnslt_alias_declare:nn {portuguese} {portuges}
\trnslt_alias_declare:nn {Portuguese} {portuguese}
\trnslt_alias_declare:nn {Romanian} {romanian}
\trnslt_alias_declare:nn {Romansh} {romansh}
\trnslt_alias_declare:nn {Romansch} {romansh}
\trnslt_alias_declare:nn {Rumantsh} {romansh}
\trnslt_alias_declare:nn {Rumantsch} {romansh}
\trnslt_alias_declare:nn {Romanche} {romansh}
\trnslt_alias_declare:nn {Russian} {russian}
\trnslt_alias_declare:nn {Samin} {samin}
\trnslt_alias_declare:nn {north sami} {samin}
\trnslt_alias_declare:nn {North Sami} {north sami}
\trnslt_alias_declare:nn {northern sami} {north sami}
\trnslt_alias_declare:nn {Northern Sami} {northern sami}
\trnslt_alias_declare:nn {Sanskrit} {sanskrit}
\trnslt_alias_declare:nn {Serbocroatian} {serbocroatian}
\trnslt_alias_declare:nn {serbo-croatian} {serbocroatian}
\trnslt_alias_declare:nn {Serbo-Croatian} {serbocroatian}
\trnslt_alias_declare:nn {Serbian} {serbian}
\trnslt_alias_declare:nn {serbianc} {serbian}
\trnslt_alias_declare:nn {Croatian} {croatian}
\trnslt_alias_declare:nn {Slovak} {slovak}
\trnslt_alias_declare:nn {Slovenian} {slovenian}
\trnslt_alias_declare:nn {slovene} {slovenian}
\trnslt_alias_declare:nn {Slovene} {slovene}
\trnslt_alias_declare:nn {Sorbian} {sorbian}
\trnslt_alias_declare:nn {Lowersorbian} {lowersorbian}
\trnslt_alias_declare:nn {Uppersorbian} {uppersorbian}
\trnslt_alias_declare:nn {lsorbian} {lowersorbian}
\trnslt_alias_declare:nn {usorbian} {uppersorbian}
\trnslt_alias_declare:nn {lower sorbian} {lowersorbian}
\trnslt_alias_declare:nn {upper sorbian} {uppersorbian}
\trnslt_alias_declare:nn {lower Sorbian} {lowersorbian}
\trnslt_alias_declare:nn {upper Sorbian} {uppersorbian}
\trnslt_alias_declare:nn {Lower Sorbian} {lowersorbian}
\trnslt_alias_declare:nn {Upper Sorbian} {uppersorbian}
\trnslt_alias_declare:nn {Spanglish} {spanglish}
\trnslt_alias_declare:nn {Spanish} {spanish}
\trnslt_alias_declare:nn {Swedish} {swedish}
\trnslt_alias_declare:nn {Swissgerman} {swissgerman}
\trnslt_alias_declare:nn {swiss german} {swissgerman}
\trnslt_alias_declare:nn {Swiss German} {swissgerman}
\trnslt_alias_declare:nn {Swissfrench} {swissfrench}
\trnslt_alias_declare:nn {swiss french} {swissfrench}
\trnslt_alias_declare:nn {Swiss French} {swissfrench}
\trnslt_alias_declare:nn {Swissitalian} {swissitalian}
\trnslt_alias_declare:nn {swiss italian} {swissitalian}
\trnslt_alias_declare:nn {Swiss Italian} {swissitalian}
\trnslt_alias_declare:nn {Swissromansh} {swissromansh}
\trnslt_alias_declare:nn {swiss romansh} {swissromansh}
\trnslt_alias_declare:nn {Swiss Romansh} {swissromansh}
% this is to be discussed: swiss could also be an alias of french, italian or
% romansh:
\trnslt_alias_declare:nn {swiss} {swissgerman}
\trnslt_alias_declare:nn {Swiss} {swiss}
% \trnslt_alias_declare:nn {Syriac} {syriac}
\trnslt_alias_declare:nn {Tamil} {tamil}
\trnslt_alias_declare:nn {Telugu} {telugu}
\trnslt_alias_declare:nn {Thai} {thai}
\trnslt_alias_declare:nn {thaicjk} {thai}
\trnslt_alias_declare:nn {Thaicjk} {thaicjk}
\trnslt_alias_declare:nn {Tibetan} {tibetan}
\trnslt_alias_declare:nn {Turkish} {turkish}
\trnslt_alias_declare:nn {Turkmen} {turkmen}
\trnslt_alias_declare:nn {Ukrainian} {ukrainian}
\trnslt_alias_declare:nn {Vietnamese} {vietnamese}
\trnslt_alias_declare:nn {Welsh} {welsh}

% ==========================================================================
% Wait, we still need an interface for non expl3 users:

\NewDocumentCommand \DeclareLanguage {m}
  { \trnslt_language_declare:n {#1} }

\NewExpandableDocumentCommand \baselanguage {m}
  { \trnslt_language_base:n {#1} }

\NewDocumentCommand \DeclareLanguageAlias {mm}
  { \trnslt_alias_declare:nn {#1} {#2} }

\NewDocumentCommand \DeclareLanguageDialect {mm}
  { \trnslt_dialect_declare:nn {#1} {#2} }

\NewExpandableDocumentCommand \ifcurrentlanguage {m}
  { \trnslt_if_language:nTF {#1} }

\NewExpandableDocumentCommand \ifcurrentbaselanguage {m}
  { \trnslt_if_language_base:nTF {#1} }

\NewExpandableDocumentCommand \ifcurrentlang {m}
  { \if_predicate:w \trnslt_if_language_p:n {#1} }

\NewExpandableDocumentCommand \ifcurrentbaselang {m}
  { \if_predicate:w \trnslt_if_language_base_p:n {#1} }

\NewExpandableDocumentCommand \thelanguage {m}
  { \trnslt_language:n {#1} }

% --------------------------------------------------------------------------
% \DeclareTranslation, \NewTranslation, \RenewTranslation and
% \ProvideTranslation
% #1: language
% #2: word
% #3: replacement
\NewDocumentCommand \DeclareTranslation {mm+m}
  { \trnslt_translation_declare:nnn {#2} {#1} {#3} }
\NewCommandCopy \declaretranslation \DeclareTranslation
\@onlypreamble \DeclareTranslation
  
\NewDocumentCommand \NewTranslation {mm+m}
  { \trnslt_translation_new:nnn {#2} {#1} {#3} }
\NewCommandCopy \definetranslation \NewTranslation
\@onlypreamble \NewTranslation

\NewDocumentCommand \RenewTranslation {mm+m}
  { \trnslt_translation_renew:nnn {#2} {#1} {#3} }
\NewCommandCopy \redefinetranslation \RenewTranslation
\@onlypreamble \RenewTranslation

\NewDocumentCommand \ProvideTranslation {mm+m}
  { \trnslt_translation_provide:nnn {#2} {#1} {#3} }
\NewCommandCopy \addtranslation \ProvideTranslation
\@onlypreamble \ProvideTranslation

\NewDocumentCommand \DeclareTranslationFallback {}
  { \DeclareTranslation {fallback} }
\NewCommandCopy \declaretranslationfallback \DeclareTranslationFallback
\@onlypreamble \DeclareTranslationFallback

\NewDocumentCommand \NewTranslationFallback {}
  { \NewTranslation {fallback} }
\NewCommandCopy \definetranslationfallback \NewTranslationFallback
\@onlypreamble \NewTranslationFallback

\NewDocumentCommand \RenewTranslationFallback {}
  { \RenewTranslation {fallback} }
\NewCommandCopy \redefinetranslationfallback \RenewTranslationFallback
\@onlypreamble \RenewTranslationFallback

\NewDocumentCommand \ProvideTranslationFallback {}
  { \ProvideTranslation {fallback} }
\NewCommandCopy \addtranslationfallback \ProvideTranslationFallback
\@onlypreamble \ProvideTranslationFallback

% --------------------------------------------------------------------------
\NewDocumentCommand \LoadDictionary {m}
  { \trnslt_load_dictionary:n {#1} }
\@onlypreamble\LoadDictionary

\NewDocumentCommand \LoadDictionaryFor {mm}
  { \trnslt_load_dictionary:nn {#2} {#1} }
\@onlypreamble\LoadDictionaryFor
  
\NewDocumentCommand \DeclareDictTranslation {m+m}
  { \trnslt_dictionary_translation_declare:nn {#1} {#2} }
\@onlypreamble \DeclareDictTranslation

\NewDocumentCommand \NewDictTranslation {m+m}
  { \trnslt_dictionary_translation_new:nn {#1} {#2} }
\@onlypreamble \NewDictTranslation

\NewDocumentCommand \RenewDictTranslation {m+m}
  { \trnslt_dictionary_translation_renew:nn {#1} {#2} }
\@onlypreamble \RenewDictTranslation

\NewDocumentCommand \ProvideDictTranslation {m+m}
  { \trnslt_dictionary_translation_provide:nn {#1} {#2} }
\@onlypreamble \ProvideDictTranslation

% --------------------------------------------------------------------------
% #1: language
% #2: word
\NewExpandableDocumentCommand \IfTranslation {mm}
  {  \trnslt_translation_if_exist:nnTF {#2} {#1} }

% #1: language
% #2: word
\NewExpandableDocumentCommand \GetTranslationFor {mm}
  { \trnslt_translate:nn {#2} {#1} }

% #1: word
\NewExpandableDocumentCommand \GetTranslation {m}
  { \trnslt_translate:ne {#1} { \c_trnslt_current_language_tl } }

% #1: language
% #2: word
\NewExpandableDocumentCommand \GetTranslationForWarn {mm}
  {
    \trnslt_translation_if_exist:nnTF {#2} {#1}
      { \trnslt_translate:nn {#2} {#1} }
      { \msg_warning:nnnn {trnslt} {translation-not-defined} {#2} {#1} }
  }

% #1: word
\NewExpandableDocumentCommand \GetTranslationWarn {m}
  {
    \trnslt_translation_if_exist:neF {#1} { \c_trnslt_current_language_tl }
      { \trnslt_translate: {#1} { \c_trnslt_current_language_tl } }
      {
        \msg_warning:nnne {trnslt} {translation-not-defined}
          {#1}
          { \c_trnslt_current_language_tl }
      }
  }
  
% #1: variable
% #2: language
% #3: word
\NewDocumentCommand \SaveTranslationFor {mmm}
  { \trnslt_translation_get:Nnn #1 {#3} {#2} }

% #1: variable
% #2: word
\NewDocumentCommand \SaveTranslation {mm}
  { \trnslt_translation_get:Nne #1 {#2} { \c_trnslt_current_language_tl } }
  
% ==========================================================================
% OK, we have everything, do we? No, wait: let's load the basic dictionary
% that is part of this package if it is available for the document language
% --------------------------------------------------------------------------
% load basic dictionaries if available
\clist_new:N \l_trnslt_loaded_languages_clist
  
\hook_gput_code:nnn {begindocument} {trnslt}
  {
    \trnslt_package_if_loaded:nT {babel}
      { \clist_set:Nx \l_trnslt_loaded_languages_clist { \bbl@loaded } }
    \trnslt_package_if_loaded:nT {polyglossia}
      { \clist_set:Nx \l_trnslt_loaded_languages_clist { \xpg@loaded } }
    \trnslt_package_if_loaded:nT {tracklang}
      {
        \clist_map_inline:en { \@tracklang@languages,\@tracklang@dialects }
          {
            \clist_if_in:NnF \l_trnslt_loaded_languages_clist {#1}
              { \clist_put_right:Nn \l_trnslt_loaded_languages_clist {#1} }
          }
      }
    \clist_if_empty:NT \l_trnslt_loaded_languages_clist
      { \clist_put_right:Ne \l_trnslt_loaded_languages_clist { \c_trnslt_current_language_tl } }
    \clist_map_inline:Nn \l_trnslt_loaded_languages_clist
      { \__trnslt_load_dictionary:nn {translations-basic-dictionary} {#1} }
    \seq_remove_duplicates:N \l__trnslt_dictionaries_seq
    \seq_map_inline:Nn \l__trnslt_dictionaries_seq
      { \__trnslt_input_dictionary:w #1 \q_stop }
  }

% ==========================================================================
% the following commands are not of direct use but are for
%   a) documenting and
%   b) debugging

\cs_new:Npn \__trnslt_get_word:w #1|#2\q_stop {#1}
\cs_new:Npn \__trnslt_get_lang:w #1|#2\q_stop {#2}

\cs_new_protected:Npn \trnslt_show_translations:
  {
    \iow_term:n
      {
        The~ package~ translations~ knows~ the~ following~ terms~ (without~
        outer~ braces):
      }
    \prop_map_inline:Nn \g_trnslt_translations_prop
      {
        \tl_set:Nx \l_tmpa_tl { \__trnslt_get_lang:w ##1 \q_stop }
        \tl_set:Nx \l_tmpb_tl { \text_uppercase:n { \tl_head:V \l_tmpa_tl } }
        \tl_put_right:Nx \l_tmpb_tl { \tl_tail:V \l_tmpa_tl }
        \iow_term:x
          {
            > \c_space_tl \c_space_tl { \__trnslt_get_word:w ##1 \q_stop }
            \c_space_tl \c_space_tl
            => \c_space_tl \c_space_tl { \exp_not:n {##2} }
            \c_space_tl \c_space_tl
            ( \l_tmpb_tl )
          }
      }
  }

% #1: name
% #2: language
\cs_new_protected:Npn \trnslt_show_dictionary:nn #1#2
  {
    \iow_term:n
      {
        The~ dictionary~ `#1'~ for~ #2~ consists~ of~ the~ following~ terms~
        (without~ outer~ braces):
      }
    \prop_map_inline:cn {g__trnslt_dictionary_ #1 _ \str_lowercase:n {#2} _prop}
      {
        \iow_term:x
          {
            > \c_space_tl \c_space_tl {##1}
            \c_space_tl \c_space_tl
            => \c_space_tl \c_space_tl { \exp_not:n {##2} }
          }
      }
  }

% #1: code (#1: index, #2: language)
\cs_new_protected:Npn \trnslt_map_languages:n #1
  {
    \cs_gset:Npn \__trnslt_map_languages:nn ##1##2 {#1}
    \seq_map_indexed_inline:Nn \g_trnslt_languages_seq
      { \__trnslt_map_languages:nn {##1} {##2} }
  }

% #1: code (#1: index, #2: dialect, #3: base)
\cs_new_protected:Npn \trnslt_map_dialects:n #1
  {
    \cs_gset:Npn \__trnslt_map_dialects:nnn ##1##2##3 {#1}
    \seq_map_indexed_inline:Nn \g_trnslt_dialects_seq
      {
        \__trnslt_map_dialects:nnn
          {##1}
          {##2}
          { \prop_item:Nn \g_trnslt_dialects_prop {##2} }
      }
  }

% #1: code (#1: index, #2: alias, #3: base)
\cs_new_protected:Npn \trnslt_map_aliases:n #1
  {
    \cs_gset:Npn \__trnslt_map_aliases:nnn ##1##2##3 {#1}
    \seq_map_indexed_inline:Nn \g_trnslt_aliases_seq
      {
        \__trnslt_map_aliases:nnn
          {##1}
          {##2}
          { \prop_item:Nn \g_trnslt_aliases_prop {##2} }
      }
  }

% #1: name
% #2: language
% #3: code (#1: index, #2: word, #3: translation)
\cs_new_protected:Npn \trnslt_map_dictionary:nnn #1#2#3
  {
    \cs_gset:Npn \__trnslt_map_dictionary:nnn ##1##2##3 {#3}
    \cs_gset:Npn \numberofentries
      { \seq_count:c {g__trnslt_dictionary_ #1 _ \str_lowercase:n {#2} _seq} }
    \seq_map_indexed_inline:cn {g__trnslt_dictionary_ #1 _ \str_lowercase:n {#2} _seq}
      {
        \__trnslt_map_dictionary:nnn
          {##1}
          {##2}
          { \prop_item:cn {g__trnslt_dictionary_ #1 _ \str_lowercase:n {#2}  _prop} {##2} }
      }
  }

\NewDocumentCommand \listlanguages {+m}
  { \trnslt_map_languages:n {#1} }

\NewDocumentCommand \listdialects {+m}
  { \trnslt_map_dialects:n {#1} }

\NewDocumentCommand \listaliases {+m}
  { \trnslt_map_aliases:n {#1} }

\NewDocumentCommand \PrintDictionary {mm+m}
  { \trnslt_map_dictionary:nnn {#1} {#2} {#3} }

\NewExpandableDocumentCommand \numberoflanguages {}
  { \seq_count:N \g_trnslt_languages_seq }

\NewExpandableDocumentCommand \numberofdialects {}
  { \seq_count:N \g_trnslt_dialects_seq }

\NewExpandableDocumentCommand \numberofaliases {}
  { \seq_count:N \g_trnslt_aliases_seq }

% ==========================================================================
% transition from v1 to v2:
% #1: old
% #2: new
\cs_new_protected:Npn \__trnslt_deprecate_function:NN #1#2
  {
    \cs_set_protected:Npn #1
      { \msg_error:nnnn {trnslt} {deprecated-function} {#1} {#2} #2 }
  }

% #1: old
\cs_new_protected:Npn \__trnslt_remove_function:N #1
  {
    \cs_set_protected:Npn #1
      { \msg_error:nnn {trnslt} {removed-function} {#1} }
  }

\__trnslt_deprecate_function:NN \PrintDictionaryFor \PrintDictionary
\__trnslt_remove_function:N \LoadDictionaryForDialect
\__trnslt_remove_function:N \GetLCTranslationFor
\__trnslt_remove_function:N \GetLCTranslation
\__trnslt_remove_function:N \GetLCTranslationForWarn
\__trnslt_remove_function:N \GetLCTranslationWarn

\file_input_stop:
% ==========================================================================
